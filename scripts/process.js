function loadData() {
    fetch('data.json')
    .then(response => response.json())
    .then(data => {
        const container = document.createElement("section");
        container.id = "container";
        data.forEach(scp => {
            const entry = document.createElement("section");
            entry.id=scp.name;
            
            const content = `
            <h2>Item #: ${scp.name.toUpperCase()}</h2>
            <h3>Object Class: ${scp.class} </h3>
            <h4>Description:</h4>
            <p>${scp.description}</p>
            <h4>Special Containment Procedures:</h4>
            <p>${scp.containment}</p>`;
            const butt=document.createElement("button");
            butt.onclick=function(){speechToText(`Hello, my name is ${scp.name} `)};
            butt.innerHTML=`<img src="images/speak.png" alt=" Listen${scp.name}">`;
            entry.innerHTML = content;
            entry.appendChild(butt)
            container.appendChild(entry);  // Moved inside the forEach loop to append each entry
            
            
        });
        document.body.appendChild(container); // Appends the container to the body or another element of your choice
        style()
    })
        .catch(error => {
            const container=document.createElement("section");
            container.id="container";
            container.style.backgroundColor="red";
            container.innerHTML=`<h2> Error: we got this error ${error} </h2>`
            document.body.appendChild(container);
        });
    }
function speechToText(text) {
    const speech=new SpeechSynthesisUtterance(text);
    speech.lang="en-US";
    speech.voice=window.speechSynthesis.getVoices()[0];
    speechSynthesis.speak(speech);
    
}
function style() {
    // Function generated by ChatGPT, modified a little by me.
// code to style certain phrases in the text

const phrases = {
    "[DATA EXPUNGED]": "<strong><span style='color: red;'>[DATA EXPUNGED]</span></strong>" // Style for [DATA EXPUNGED]
   
};
const Htypes={
    "Safe": "<strong><span style='color: green;'>Safe</span></strong>", // Style for Safe
    "Euclid": "<strong><span style='color: orange;'>Euclid</span></strong>" // Style for Euclid
};
// Function to replace phrases in a given element's text content
const styleText = (element) => {
    for (let phrase in phrases) {
        element.innerHTML = element.innerHTML.split(phrase).join(phrases[phrase]);
    }
};
const styleHeadings = (element) => {
    for (let phrase in Htypes) {
        element.innerHTML = element.innerHTML.split(phrase).join(Htypes[phrase]);
    }
};
// Apply the styling to <p> tags
document.querySelectorAll("p").forEach(p => {
    styleText(p);
});

// Apply the styling to <code> tags
document.querySelectorAll("code").forEach(code => {
    styleText(code);
});
// Apply the styling to <h2> tags
document.querySelectorAll("h2").forEach(h2 => {
    styleHeadings(h2);
});
// Apply the styling to <h3> tags
document.querySelectorAll("h3").forEach(h3 => {
    styleHeadings(h3);
});


}
